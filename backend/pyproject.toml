[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "wealthos-backend"
version = "0.1.0"
description = "WealthOS Backend - Financial analysis and investment platform"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "Proprietary" }
authors = [{ name = "WealthOS Team" }]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.23.2",
    "sqlalchemy>=2.0.23",
    "pydantic>=2.4.2",
    "pandas>=2.1.1",
    "numpy>=1.26.0",
    "polars>=0.19.12",
    "python-dotenv>=1.0.0",
    "riskfolio-lib>=4.4.0",
    "statsmodels>=0.14.0",
    "scikit-learn>=1.3.2",
    "redis>=5.0.1",
    "psycopg>=3.1.12",
    "httpx>=0.25.0",
    "pydantic-settings>=2.0.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "black>=23.10.1",
    "isort>=5.12.0",
    "mypy>=1.6.1",
    "ruff>=0.1.3",
]

[tool.black]
line-length = 88

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "B", "I"]
ignore = ["B008"]

# Add specific configuration for the pycodestyle category (where E501 comes from)
[tool.ruff.lint.pycodestyle]
max-line-length = 88

[tool.pyright]
# Tells pyright to use the environment selected in the editor
# This is often the most straightforward approach.
useLibraryCodeForTypes = true

# Alternatively, you can explicitly define the execution environment
# if the above doesn't work or you need more control.
venvPath = "." # Directory containing the virtual env (e.g., where .venv is)
venv = ".venv" # Name of the virtual environment directory

# Define the source root(s) if needed (often auto-detected)
# include = ["app"]
# exclude = ["**/node_modules", ...]

# Report errors for missing imports (you likely already have this enabled in settings)
reportMissingImports = true
reportMissingModuleSource = false # Often less useful than reportMissingImports

# You can adjust other settings based on pyright documentation
